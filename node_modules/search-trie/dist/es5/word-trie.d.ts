import type { EdgeValues, SearchResult, SearchTrie, TrieNode } from './types';
export declare const searchTrie: <T>(trie: TrieNode, paths: string[], values: EdgeValues) => SearchResult<string[], T>;
/**
 * builds a "word" based search trie.
 * Optimized for long but structured inputs, like directory names
 *
 * pros:
 * - fewer steps to find solution as key name can be long
 *
 * cons:
 * - potentially more keys in single node causing hashmap speed degradation
 *
 * - input: array of {key:string[], value}
 */
export declare const buildWordTrie: <T>(lines: {
    key: string[];
    value: T;
}[]) => SearchTrie<string[], T>;
